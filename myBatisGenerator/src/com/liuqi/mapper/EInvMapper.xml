<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.inter.EInvMapper">
  <resultMap id="BaseResultMap" type="com.liuqi.model.EInv">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="inv_type" jdbcType="INTEGER" property="invType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="qty" jdbcType="INTEGER" property="qty" />
    <result column="preadd_qty" jdbcType="INTEGER" property="preaddQty" />
    <result column="presub_qty" jdbcType="INTEGER" property="presubQty" />
    <result column="lock_qty" jdbcType="INTEGER" property="lockQty" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="owner_code" jdbcType="VARCHAR" property="ownerCode" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sku_code, inv_type, status, org_code, qty, preadd_qty, presub_qty, lock_qty, 
    cost, create_user, create_time, update_user, update_time, owner_code, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_inv
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from e_inv
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.liuqi.model.EInv">
    insert into e_inv (id, sku_code, inv_type, 
      status, org_code, qty, 
      preadd_qty, presub_qty, lock_qty, 
      cost, create_user, create_time, 
      update_user, update_time, owner_code, 
      version)
    values (#{id,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR}, #{invType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR}, #{qty,jdbcType=INTEGER}, 
      #{preaddQty,jdbcType=INTEGER}, #{presubQty,jdbcType=INTEGER}, #{lockQty,jdbcType=INTEGER}, 
      #{cost,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{ownerCode,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liuqi.model.EInv">
    insert into e_inv
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="invType != null">
        inv_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="preaddQty != null">
        preadd_qty,
      </if>
      <if test="presubQty != null">
        presub_qty,
      </if>
      <if test="lockQty != null">
        lock_qty,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ownerCode != null">
        owner_code,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="invType != null">
        #{invType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="preaddQty != null">
        #{preaddQty,jdbcType=INTEGER},
      </if>
      <if test="presubQty != null">
        #{presubQty,jdbcType=INTEGER},
      </if>
      <if test="lockQty != null">
        #{lockQty,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ownerCode != null">
        #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuqi.model.EInv">
    update e_inv
    <set>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="invType != null">
        inv_type = #{invType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="preaddQty != null">
        preadd_qty = #{preaddQty,jdbcType=INTEGER},
      </if>
      <if test="presubQty != null">
        presub_qty = #{presubQty,jdbcType=INTEGER},
      </if>
      <if test="lockQty != null">
        lock_qty = #{lockQty,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ownerCode != null">
        owner_code = #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuqi.model.EInv">
    update e_inv
    set sku_code = #{skuCode,jdbcType=VARCHAR},
      inv_type = #{invType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=INTEGER},
      preadd_qty = #{preaddQty,jdbcType=INTEGER},
      presub_qty = #{presubQty,jdbcType=INTEGER},
      lock_qty = #{lockQty,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      owner_code = #{ownerCode,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.liuqi.model.EInv">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="inv_type" jdbcType="INTEGER" property="invType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="qty" jdbcType="INTEGER" property="qty" />
    <result column="preadd_qty" jdbcType="INTEGER" property="preaddQty" />
    <result column="presub_qty" jdbcType="INTEGER" property="presubQty" />
    <result column="lock_qty" jdbcType="INTEGER" property="lockQty" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="owner_code" jdbcType="VARCHAR" property="ownerCode" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku_code, inv_type, status, org_code, qty, preadd_qty, presub_qty, lock_qty, 
    cost, create_user, create_time, update_user, update_time, owner_code, version
  </sql>
  <select id="selectByExample" parameterType="com.liuqi.model.EInvExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_inv
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_inv
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from e_inv
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liuqi.model.EInvExample">
    delete from e_inv
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liuqi.model.EInv">
    insert into e_inv (id, sku_code, inv_type, 
      status, org_code, qty, 
      preadd_qty, presub_qty, lock_qty, 
      cost, create_user, create_time, 
      update_user, update_time, owner_code, 
      version)
    values (#{id,jdbcType=BIGINT}, #{skuCode,jdbcType=VARCHAR}, #{invType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR}, #{qty,jdbcType=INTEGER}, 
      #{preaddQty,jdbcType=INTEGER}, #{presubQty,jdbcType=INTEGER}, #{lockQty,jdbcType=INTEGER}, 
      #{cost,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{ownerCode,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liuqi.model.EInv">
    insert into e_inv
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="invType != null">
        inv_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="qty != null">
        qty,
      </if>
      <if test="preaddQty != null">
        preadd_qty,
      </if>
      <if test="presubQty != null">
        presub_qty,
      </if>
      <if test="lockQty != null">
        lock_qty,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ownerCode != null">
        owner_code,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="invType != null">
        #{invType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="preaddQty != null">
        #{preaddQty,jdbcType=INTEGER},
      </if>
      <if test="presubQty != null">
        #{presubQty,jdbcType=INTEGER},
      </if>
      <if test="lockQty != null">
        #{lockQty,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ownerCode != null">
        #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liuqi.model.EInvExample" resultType="java.lang.Integer">
    select count(*) from e_inv
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_inv
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.skuCode != null">
        sku_code = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.invType != null">
        inv_type = #{record.invType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.qty != null">
        qty = #{record.qty,jdbcType=INTEGER},
      </if>
      <if test="record.preaddQty != null">
        preadd_qty = #{record.preaddQty,jdbcType=INTEGER},
      </if>
      <if test="record.presubQty != null">
        presub_qty = #{record.presubQty,jdbcType=INTEGER},
      </if>
      <if test="record.lockQty != null">
        lock_qty = #{record.lockQty,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ownerCode != null">
        owner_code = #{record.ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_inv
    set id = #{record.id,jdbcType=BIGINT},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      inv_type = #{record.invType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      qty = #{record.qty,jdbcType=INTEGER},
      preadd_qty = #{record.preaddQty,jdbcType=INTEGER},
      presub_qty = #{record.presubQty,jdbcType=INTEGER},
      lock_qty = #{record.lockQty,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=DECIMAL},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      owner_code = #{record.ownerCode,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liuqi.model.EInv">
    update e_inv
    <set>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="invType != null">
        inv_type = #{invType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="qty != null">
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="preaddQty != null">
        preadd_qty = #{preaddQty,jdbcType=INTEGER},
      </if>
      <if test="presubQty != null">
        presub_qty = #{presubQty,jdbcType=INTEGER},
      </if>
      <if test="lockQty != null">
        lock_qty = #{lockQty,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ownerCode != null">
        owner_code = #{ownerCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liuqi.model.EInv">
    update e_inv
    set sku_code = #{skuCode,jdbcType=VARCHAR},
      inv_type = #{invType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=VARCHAR},
      qty = #{qty,jdbcType=INTEGER},
      preadd_qty = #{preaddQty,jdbcType=INTEGER},
      presub_qty = #{presubQty,jdbcType=INTEGER},
      lock_qty = #{lockQty,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      owner_code = #{ownerCode,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>